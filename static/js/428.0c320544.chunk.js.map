{"version":3,"file":"static/js/428.0c320544.chunk.js","mappings":"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","sources":["pages/Festival-Page/festival.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Main from '../../components/page/Main.jsx';\r\nimport { Link } from 'react-router-dom';\r\nimport './festival.css';\r\n\r\nconst databaseURL = 'https://python-db-practice-96823-default-rtdb.firebaseio.com';\r\n\r\nconst Festival = () => {\r\n    const [festivals, setFestivals] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n    const [selectedMonth, setSelectedMonth] = useState('');\r\n    const [selectedSpecificMonth, setSelectedSpecificMonth] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`${databaseURL}/지역축제정보데이터.json`);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                const festivalArray = Object.keys(data).map(key => ({\r\n                    id: key,\r\n                    ...data[key]\r\n                }));\r\n                setFestivals(festivalArray);\r\n                console.log('Fetched data:', festivalArray); // 디버깅을 위해 추가\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    const handleMonthChange = (event) => {\r\n        setSelectedMonth(event.target.value);\r\n        setSelectedSpecificMonth(''); // 상위 카테고리가 변경될 때 하위 카테고리를 초기화\r\n    };\r\n\r\n    const handleSpecificMonthChange = (event) => {\r\n        setSelectedSpecificMonth(event.target.value);\r\n    };\r\n\r\n    const filteredFestivals = festivals.filter(festival =>\r\n        (festival.축제명 && festival.축제명.includes(filter)) ||\r\n        (festival.개최장소 && festival.개최장소.includes(filter))\r\n    );\r\n\r\n    console.log('Filtered festivals:', filteredFestivals); // 디버깅을 위해 추가\r\n\r\n    const categorizedFestivals = filteredFestivals.filter(festival => {\r\n        if (selectedSpecificMonth) {\r\n            if (selectedSpecificMonth === '1월') {\r\n                return festival.개최기간.includes('01') || festival.개최기간.includes('1월중');\r\n            }\r\n            if (selectedSpecificMonth === '2월') {\r\n                return festival.개최기간.includes('02') || festival.개최기간.includes('2월중');\r\n            }\r\n            if (selectedSpecificMonth === '3월') {\r\n                return festival.개최기간.includes('03') || festival.개최기간.includes('3월중');\r\n            }\r\n            if (selectedSpecificMonth === '4월') {\r\n                return festival.개최기간.includes('04') || festival.개최기간.includes('4월중');\r\n            }\r\n            if (selectedSpecificMonth === '5월') {\r\n                return festival.개최기간.includes('05') || festival.개최기간.includes('5월중');\r\n            }\r\n            if (selectedSpecificMonth === '6월') {\r\n                return festival.개최기간.includes('06') || festival.개최기간.includes('6월중');\r\n            }\r\n            if (selectedSpecificMonth === '7월') {\r\n                return festival.개최기간.includes('07') || festival.개최기간.includes('7월중');\r\n            }\r\n            if (selectedSpecificMonth === '8월') {\r\n                return festival.개최기간.includes('08') || festival.개최기간.includes('8월중');\r\n            }\r\n            if (selectedSpecificMonth === '9월') {\r\n                return festival.개최기간.includes('09') || festival.개최기간.includes('9월중');\r\n            }\r\n            if (selectedSpecificMonth === '10월') {\r\n                return festival.개최기간.includes('10') || festival.개최기간.includes('10월중');\r\n            }\r\n            if (selectedSpecificMonth === '11월') {\r\n                return festival.개최기간.includes('11') || festival.개최기간.includes('11월중');\r\n            }\r\n            if (selectedSpecificMonth === '12월') {\r\n                return festival.개최기간.includes('12') || festival.개최기간.includes('12월중');\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n\r\n    console.log('Categorized festivals:', categorizedFestivals); // 디버깅을 위해 추가\r\n\r\n    const months = ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'];\r\n\r\n    return (\r\n        <Main>\r\n            <div className=\"filters-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"지역축제 검색하기\"\r\n                    value={filter}\r\n                    onChange={handleFilterChange}\r\n                />\r\n                <select value={selectedMonth} onChange={handleMonthChange}>\r\n                    <option value=\"\">기간 선택하기</option>\r\n                    <option value=\"MONTH\">월</option>\r\n                </select>\r\n                {selectedMonth === 'MONTH' && (\r\n                    <select value={selectedSpecificMonth} onChange={handleSpecificMonthChange}>\r\n                        <option value=\"\">월</option>\r\n                        {months.map(month => (\r\n                            <option key={month} value={month}>{month}</option>\r\n                        ))}\r\n                    </select>\r\n                )}\r\n            </div>\r\n            <div className=\"festival-list\">\r\n                {categorizedFestivals.length > 0 ? (\r\n                    categorizedFestivals.map(festival => (\r\n                        <div className=\"section_fes\" key={festival.id}>\r\n                            <Link to={`/festival/${festival.id}`} style={{ textDecoration: 'none' }}>\r\n                                <div className=\"headerText\">{festival.축제명}</div>\r\n                                <div className=\"innerText\">더보기</div>\r\n                                <div className=\"InnerText\">{festival.개최기간}</div>\r\n                                <div className=\"section__data\">{festival.축제유형}</div>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No festivals found.</p>\r\n                )}\r\n            </div>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default Festival;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","festivals","setFestivals","_useState3","_useState4","filter","setFilter","_useState5","_useState6","selectedMonth","setSelectedMonth","_useState7","_useState8","selectedSpecificMonth","setSelectedSpecificMonth","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","festivalArray","wrap","_context","prev","next","fetch","concat","sent","ok","Error","status","json","Object","keys","map","key","_objectSpread","id","console","log","t0","error","stop","apply","arguments","filteredFestivals","festival","축제명","includes","개최장소","categorizedFestivals","개최기간","_jsxs","Main","children","className","_jsx","type","placeholder","value","onChange","event","target","month","length","Link","to","style","textDecoration","축제유형"],"sourceRoot":""}