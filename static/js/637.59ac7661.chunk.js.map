{"version":3,"file":"static/js/637.59ac7661.chunk.js","mappings":"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","sources":["pages/Market-Page/market.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Main from '../../components/page/Main.jsx';\nimport { Link } from 'react-router-dom';\nimport './market.css';\n\nimport park01 from '../../assets/ico/parkingicon01.png'; \nimport park02 from '../../assets/ico/parkingicon02.png'; \nimport rest01 from '../../assets/ico/restroomicon01.png'; \nimport rest02 from '../../assets/ico/restroomicon02.png'; \nimport voucher01 from '../../assets/ico/온누리.png'; \nimport voucher02 from '../../assets/ico/상품권없음.png'; \n\nconst databaseURL = 'https://python-db-practice-96823-default-rtdb.firebaseio.com';\n\nconst Market = () => {\n    const [markets, setMarkets] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [selectedRegion, setSelectedRegion] = useState('');\n    const [selectedCity, setSelectedCity] = useState('');\n\n    useEffect(() => {\n        fetch(`${databaseURL}/전통시장데이터.json`)\n            .then(res => res.json())\n            .then(data => {\n                const marketArray = Object.keys(data).map(key => ({\n                    id: key,\n                    ...data[key]\n                }));\n                setMarkets(marketArray);\n            });\n    }, []);\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n\n    const handleRegionChange = (event) => {\n        setSelectedRegion(event.target.value);\n        setSelectedCity(''); // 상위 카테고리가 변경될 때 하위 카테고리를 초기화\n    };\n\n    const handleCityChange = (event) => {\n        setSelectedCity(event.target.value);\n    };\n\n    const filteredMarkets = markets.filter(market =>\n        (market.시장명 && market.시장명.includes(filter)) ||\n        (market.소재지도로명주소 && market.소재지도로명주소.includes(filter))\n    );\n\n    const categorizedMarkets = filteredMarkets.filter(market => {\n        if (selectedRegion && selectedRegion !== 'All') {\n            if (!market.소재지도로명주소.includes(selectedRegion)) {\n                return false;\n            }\n        }\n        if (selectedCity && selectedCity !== 'All') {\n            if (!market.소재지도로명주소.includes(selectedCity)) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    const citiesByRegion = {\n        '강원도': ['춘천', '강릉', '원주', '홍천'],\n        // 다른 지역에 대해서도 여기에 도시들을 추가할 수 있습니다.\n    };\n\n    return (\n        <Main>\n            <div className=\"filters-container\">\n                <input\n                    type=\"text\"\n                    placeholder=\"전통시장 검색하기\"\n                    value={filter}\n                    onChange={handleFilterChange}\n                />\n                <select value={selectedRegion} onChange={handleRegionChange}>\n                    <option value=\"All\">지역 선택</option>\n                    <option value=\"강원도\">강원도</option>\n                    {/* 다른 상위 카테고리를 여기에 추가할 수 있습니다. */}\n                </select>\n                {selectedRegion && citiesByRegion[selectedRegion] && (\n                    <select value={selectedCity} onChange={handleCityChange}>\n                        <option value=\"All\">Select City</option>\n                        {citiesByRegion[selectedRegion].map(city => (\n                            <option key={city} value={city}>{city}</option>\n                        ))}\n                    </select>\n                )}\n            </div>\n            <div className=\"market-list\">\n                {categorizedMarkets.map(market => (\n                    <div className=\"section_mk\" key={market.id}>\n                        <Link to={`/market/${market.id}`} style={{ textDecoration: 'none' }}>\n                            <div className=\"headerText\">{market.시장명}</div>\n                            <div className=\"innerText\">더보기</div>\n                            <div className=\"InnerText\">{market.소재지도로명주소}</div>\n                            <div className=\"section__data\">{market.소재지지번주소}</div>\n                            <div className=\"section__data\">\n                                <img src={market.주차장보유여부 === 'Y' ? park01 : park02} alt=\"Parking Availability\" />\n                                <img src={market.공중화장실보유여부 === 'Y' ? rest01 : rest02} alt=\"Toilet Availability\" />\n                            </div>\n                            <div className=\"section__data\">\n                                <img src={market.사용가능상품권 === '온누리상품권' ? voucher01 : voucher02} alt=\"Voucher Availability\" />\n                            </div>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </Main>\n    );\n};\n\nexport default Market;\n"],"names":["_useState","useState","_useState2","_slicedToArray","markets","setMarkets","_useState3","_useState4","filter","setFilter","_useState5","_useState6","selectedRegion","setSelectedRegion","_useState7","_useState8","selectedCity","setSelectedCity","useEffect","fetch","concat","then","res","json","data","marketArray","Object","keys","map","key","_objectSpread","id","filteredMarkets","market","시장명","includes","소재지도로명주소","categorizedMarkets","citiesByRegion","_jsxs","Main","children","className","_jsx","type","placeholder","value","onChange","event","target","city","Link","to","style","textDecoration","소재지지번주소","src","주차장보유여부","alt","공중화장실보유여부","사용가능상품권"],"sourceRoot":""}